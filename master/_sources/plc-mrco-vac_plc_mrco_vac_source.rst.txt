

DUTs
----


GVLs
----


GVL_COM
^^^^^^^

::

    //{attribute 'qualified_only'}
    VAR_GLOBAL
        // Define COM Ports/Buffers incl. library Tc2_SerialCom
        SerialRXBuffer_MRCO_MAIN_PTM_01 : ComBuffer;
        SerialTXBuffer_MRCO_MAIN_PTM_01 : ComBuffer;
        SerialRXBuffer_MRCO_MAIN_PTM_02 : ComBuffer;
        SerialTXBuffer_MRCO_MAIN_PTM_02 : ComBuffer;
        SerialRXBuffer_MRCO_MAIN_PTM_03 : ComBuffer;
        SerialTXBuffer_MRCO_MAIN_PTM_03 : ComBuffer;
        SerialRXBuffer_MRCO_MAIN_PTM_04 : ComBuffer;
        SerialTXBuffer_MRCO_MAIN_PTM_04 : ComBuffer;
        SerialRXBuffer_MRCO_ROUGH_PTM_01 : ComBuffer;
        SerialTXBuffer_MRCO_ROUGH_PTM_01 : ComBuffer;
        SerialRXBuffer_MRCO_MSC_PTM_01 : ComBuffer;
        SerialTXBuffer_MRCO_MSC_PTM_01 : ComBuffer;


        // Serial Terminal
        fbSerialLineControl_MRCO_MAIN_PTM_01 : SerialLineControl;
        fbSerialLineControl_MRCO_MAIN_PTM_02 : SerialLineControl;
        fbSerialLineControl_MRCO_MAIN_PTM_03 : SerialLineControl;
        fbSerialLineControl_MRCO_MAIN_PTM_04 : SerialLineControl;
        fbSerialLineControl_MRCO_ROUGH_PTM_01 : SerialLineControl;
        fbSerialLineControl_MRCO_MSC_PTM_01 : SerialLineControl;


        //SERIAL IO
        {attribute      'TcLinkTo'      :=      '.Status:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 1^Status;
                                                                .D[0]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 0;
                                                                .D[1]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 1;
                                                                .D[2]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 2;
                                                                .D[3]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 3;
                                                                .D[4]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 4;
                                                                .D[5]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 5;
                                                                .D[6]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 6;
                                                                .D[7]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 7;
                                                                .D[8]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 8;
                                                                .D[9]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 9;
                                                                .D[10]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 10;
                                                                .D[11]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 11;
                                                                .D[12]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 12;
                                                                .D[13]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 13;
                                                                .D[14]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 14;
                                                                .D[15]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 15;
                                                                .D[16]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 16;
                                                                .D[17]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 17;
                                                                .D[18]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 18;
                                                                .D[19]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 19;
                                                                .D[20]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 20;
                                                                .D[21]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 21
        '}
        stComIn_MRCO_MAIN_PTM_01        AT %I*  :       EL6inData22B;

        {attribute      'TcLinkTo'      :=      '.Ctrl:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 1^Ctrl;
                                                                .D[0]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 0;
                                                                .D[1]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 1;
                                                                .D[2]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 2;
                                                                .D[3]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 3;
                                                                .D[4]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 4;
                                                                .D[5]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 5;
                                                                .D[6]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 6;
                                                                .D[7]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 7;
                                                                .D[8]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 8;
                                                                .D[9]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 9;
                                                                .D[10]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 10;
                                                                .D[11]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 11;
                                                                .D[12]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 12;
                                                                .D[13]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 13;
                                                                .D[14]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 14;
                                                                .D[15]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 15;
                                                                .D[16]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 16;
                                                                .D[17]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 17;
                                                                .D[18]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 18;
                                                                .D[19]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 19;
                                                                .D[20]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 20;
                                                                .D[21]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 21
        '}
        stComOut_MRCO_MAIN_PTM_01        AT %Q*  :       EL6outData22B;

        {attribute      'TcLinkTo'      :=      '.Status:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 2^Status;
                                                                .D[0]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 0;
                                                                .D[1]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 1;
                                                                .D[2]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 2;
                                                                .D[3]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 3;
                                                                .D[4]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 4;
                                                                .D[5]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 5;
                                                                .D[6]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 6;
                                                                .D[7]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 7;
                                                                .D[8]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 8;
                                                                .D[9]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 9;
                                                                .D[10]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 10;
                                                                .D[11]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 11;
                                                                .D[12]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 12;
                                                                .D[13]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 13;
                                                                .D[14]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 14;
                                                                .D[15]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 15;
                                                                .D[16]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 16;
                                                                .D[17]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 17;
                                                                .D[18]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 18;
                                                                .D[19]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 19;
                                                                .D[20]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 20;
                                                                .D[21]:=TIIB[MRCO_PLC_E11_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 21
        '}
        stComIn_MRCO_MAIN_PTM_03        AT %I*  :       EL6inData22B;

        {attribute      'TcLinkTo'      :=      '.Ctrl:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 2^Ctrl;
                                                                .D[0]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 0;
                                                                .D[1]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 1;
                                                                .D[2]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 2;
                                                                .D[3]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 3;
                                                                .D[4]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 4;
                                                                .D[5]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 5;
                                                                .D[6]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 6;
                                                                .D[7]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 7;
                                                                .D[8]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 8;
                                                                .D[9]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 9;
                                                                .D[10]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 10;
                                                                .D[11]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 11;
                                                                .D[12]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 12;
                                                                .D[13]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 13;
                                                                .D[14]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 14;
                                                                .D[15]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 15;
                                                                .D[16]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 16;
                                                                .D[17]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 17;
                                                                .D[18]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 18;
                                                                .D[19]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 19;
                                                                .D[20]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 20;
                                                                .D[21]:=TIIB[MRCO_PLC_E11_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 21
        '}
        stComOut_MRCO_MAIN_PTM_03        AT %Q*  :       EL6outData22B;

        {attribute      'TcLinkTo'      :=      '.Status:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 1^Status;
                                                                .D[0]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 0;
                                                                .D[1]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 1;
                                                                .D[2]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 2;
                                                                .D[3]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 3;
                                                                .D[4]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 4;
                                                                .D[5]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 5;
                                                                .D[6]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 6;
                                                                .D[7]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 7;
                                                                .D[8]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 8;
                                                                .D[9]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 9;
                                                                .D[10]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 10;
                                                                .D[11]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 11;
                                                                .D[12]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 12;
                                                                .D[13]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 13;
                                                                .D[14]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 14;
                                                                .D[15]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 15;
                                                                .D[16]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 16;
                                                                .D[17]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 17;
                                                                .D[18]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 18;
                                                                .D[19]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 19;
                                                                .D[20]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 20;
                                                                .D[21]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 1^Data In 21
        '}
        stComIn_MRCO_MAIN_PTM_02        AT %I*  :       EL6inData22B;

        {attribute      'TcLinkTo'      :=      '.Ctrl:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 1^Ctrl;=
                                                                .D[0]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 0;
                                                                .D[1]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 1;
                                                                .D[2]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 2;
                                                                .D[3]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 3;
                                                                .D[4]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 4;
                                                                .D[5]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 5;
                                                                .D[6]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 6;
                                                                .D[7]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 7;
                                                                .D[8]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 8;
                                                                .D[9]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 9;
                                                                .D[10]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 10;
                                                                .D[11]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 11;
                                                                .D[12]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 12;
                                                                .D[13]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 13;
                                                                .D[14]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 14;
                                                                .D[15]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 15;
                                                                .D[16]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 16;
                                                                .D[17]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 17;
                                                                .D[18]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 18;
                                                                .D[19]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 19;
                                                                .D[20]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 20;
                                                                .D[21]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 1^Data Out 21
        '}
        stComOut_MRCO_MAIN_PTM_02        AT %Q*  :       EL6outData22B;

        {attribute      'TcLinkTo'      :=      '.Status:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 2^Status;
                                                                .D[0]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 0;
                                                                .D[1]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 1;
                                                                .D[2]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 2;
                                                                .D[3]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 3;
                                                                .D[4]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 4;
                                                                .D[5]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 5;
                                                                .D[6]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 6;
                                                                .D[7]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 7;
                                                                .D[8]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 8;
                                                                .D[9]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 9;
                                                                .D[10]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 10;
                                                                .D[11]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 11;
                                                                .D[12]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 12;
                                                                .D[13]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 13;
                                                                .D[14]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 14;
                                                                .D[15]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 15;
                                                                .D[16]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 16;
                                                                .D[17]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 17;
                                                                .D[18]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 18;
                                                                .D[19]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 19;
                                                                .D[20]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 20;
                                                                .D[21]:=TIIB[MRCO_PLC_E12_EL6002]^COM TxPDO-Map Inputs Channel 2^Data In 21
        '}
        stComIn_MRCO_MAIN_PTM_04        AT %I*  :       EL6inData22B;

        {attribute      'TcLinkTo'      :=      '.Ctrl:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 2^Ctrl;
                                                                .D[0]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 0;
                                                                .D[1]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 1;
                                                                .D[2]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 2;
                                                                .D[3]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 3;
                                                                .D[4]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 4;
                                                                .D[5]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 5;
                                                                .D[6]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 6;
                                                                .D[7]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 7;
                                                                .D[8]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 8;
                                                                .D[9]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 9;
                                                                .D[10]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 10;
                                                                .D[11]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 11;
                                                                .D[12]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 12;
                                                                .D[13]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 13;
                                                                .D[14]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 14;
                                                                .D[15]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 15;
                                                                .D[16]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 16;
                                                                .D[17]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 17;
                                                                .D[18]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 18;
                                                                .D[19]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 19;
                                                                .D[20]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 20;
                                                                .D[21]:=TIIB[MRCO_PLC_E12_EL6002]^COM RxPDO-Map Outputs Channel 2^Data Out 21
        '}
        stComOut_MRCO_MAIN_PTM_04        AT %Q*  :       EL6outData22B;

        {attribute      'TcLinkTo'      :=      '.Status:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM TxPDO-Map Inputs Channel 1^Status;
                                                                .D[0]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM TxPDO-Map Inputs Channel 1^Data In 0;
                                                                .D[1]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM TxPDO-Map Inputs Channel 1^Data In 1;
                                                                .D[2]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM TxPDO-Map Inputs Channel 1^Data In 2;
                                                                .D[3]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM TxPDO-Map Inputs Channel 1^Data In 3;
                                                                .D[4]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM TxPDO-Map Inputs Channel 1^Data In 4;
                                                                .D[5]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM TxPDO-Map Inputs Channel 1^Data In 5;
                                                                .D[6]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM TxPDO-Map Inputs Channel 1^Data In 6;
                                                                .D[7]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM TxPDO-Map Inputs Channel 1^Data In 7;
                                                                .D[8]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM TxPDO-Map Inputs Channel 1^Data In 8;
                                                                .D[9]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM TxPDO-Map Inputs Channel 1^Data In 9;
                                                                .D[10]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM TxPDO-Map Inputs Channel 1^Data In 10;
                                                                .D[11]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM TxPDO-Map Inputs Channel 1^Data In 11;
                                                                .D[12]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM TxPDO-Map Inputs Channel 1^Data In 12;
                                                                .D[13]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM TxPDO-Map Inputs Channel 1^Data In 13;
                                                                .D[14]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM TxPDO-Map Inputs Channel 1^Data In 14;
                                                                .D[15]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM TxPDO-Map Inputs Channel 1^Data In 15;
                                                                .D[16]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM TxPDO-Map Inputs Channel 1^Data In 16;
                                                                .D[17]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM TxPDO-Map Inputs Channel 1^Data In 17;
                                                                .D[18]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM TxPDO-Map Inputs Channel 1^Data In 18;
                                                                .D[19]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM TxPDO-Map Inputs Channel 1^Data In 19;
                                                                .D[20]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM TxPDO-Map Inputs Channel 1^Data In 20;
                                                                .D[21]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM TxPDO-Map Inputs Channel 1^Data In 21
        '}
        stComIn_MRCO_ROUGH_PTM_01        AT %I*  :       EL6inData22B;

        {attribute      'TcLinkTo'      :=      '.Ctrl:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM RxPDO-Map Outputs Channel 1^Ctrl;
                                                                .D[0]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM RxPDO-Map Outputs Channel 1^Data Out 0;
                                                                .D[1]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM RxPDO-Map Outputs Channel 1^Data Out 1;
                                                                .D[2]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM RxPDO-Map Outputs Channel 1^Data Out 2;
                                                                .D[3]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM RxPDO-Map Outputs Channel 1^Data Out 3;
                                                                .D[4]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM RxPDO-Map Outputs Channel 1^Data Out 4;
                                                                .D[5]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM RxPDO-Map Outputs Channel 1^Data Out 5;
                                                                .D[6]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM RxPDO-Map Outputs Channel 1^Data Out 6;
                                                                .D[7]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM RxPDO-Map Outputs Channel 1^Data Out 7;
                                                                .D[8]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM RxPDO-Map Outputs Channel 1^Data Out 8;
                                                                .D[9]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM RxPDO-Map Outputs Channel 1^Data Out 9;
                                                                .D[10]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM RxPDO-Map Outputs Channel 1^Data Out 10;
                                                                .D[11]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM RxPDO-Map Outputs Channel 1^Data Out 11;
                                                                .D[12]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM RxPDO-Map Outputs Channel 1^Data Out 12;
                                                                .D[13]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM RxPDO-Map Outputs Channel 1^Data Out 13;
                                                                .D[14]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM RxPDO-Map Outputs Channel 1^Data Out 14;
                                                                .D[15]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM RxPDO-Map Outputs Channel 1^Data Out 15;
                                                                .D[16]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM RxPDO-Map Outputs Channel 1^Data Out 16;
                                                                .D[17]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM RxPDO-Map Outputs Channel 1^Data Out 17;
                                                                .D[18]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM RxPDO-Map Outputs Channel 1^Data Out 18;
                                                                .D[19]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM RxPDO-Map Outputs Channel 1^Data Out 19;
                                                                .D[20]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM RxPDO-Map Outputs Channel 1^Data Out 20;
                                                                .D[21]:=TIIB[MRCO_PNL1_EP03_EP6002-0002]^COM RxPDO-Map Outputs Channel 1^Data Out 21
        '}
        stComOut_MRCO_ROUGH_PTM_01        AT %Q*  :       EL6outData22B;

       {attribute	'TcLinkTo'	:=	'.Status:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Inputs^Status;
                                     .D[0]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Inputs^Data In 0;
                                     .D[1]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Inputs^Data In 1;
                                     .D[2]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Inputs^Data In 2;
                                     .D[3]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Inputs^Data In 3;
                                     .D[4]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Inputs^Data In 4;
                                     .D[5]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Inputs^Data In 5;
                                     .D[6]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Inputs^Data In 6;
                                     .D[7]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Inputs^Data In 7;
                                     .D[8]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Inputs^Data In 8;
                                     .D[9]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Inputs^Data In 9;
                                     .D[10]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Inputs^Data In 10;
                                     .D[11]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Inputs^Data In 11;
                                     .D[12]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Inputs^Data In 12;
                                     .D[13]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Inputs^Data In 13;
                                     .D[14]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Inputs^Data In 14;
                                     .D[15]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Inputs^Data In 15;
                                     .D[16]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Inputs^Data In 16;
                                     .D[17]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Inputs^Data In 17;
                                     .D[18]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Inputs^Data In 18;
                                     .D[19]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Inputs^Data In 19;
                                     .D[20]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Inputs^Data In 20;
                                     .D[21]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Inputs^Data In 21
        '}
     //   stComIn_MRCO_SS_PTM_01        AT %I*  :       EL6inData22B;
         stComIn_MRCO_MSC_PTM_01        AT %I*  :       EL6inData22B;

       {attribute 'TcLinkTo'	:=	'.Ctrl:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Outputs^Ctrl;
                                     .D[0]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Outputs^Data Out 0;
                                     .D[1]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Outputs^Data Out 1;
                                     .D[2]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Outputs^Data Out 2;
                                     .D[3]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Outputs^Data Out 3;
                                     .D[4]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Outputs^Data Out 4;
                                     .D[5]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Outputs^Data Out 5;
                                     .D[6]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Outputs^Data Out 6;
                                     .D[7]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Outputs^Data Out 7;
                                     .D[8]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Outputs^Data Out 8;
                                     .D[9]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Outputs^Data Out 9;
                                     .D[10]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Outputs^Data Out 10;
                                     .D[11]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Outputs^Data Out 11;
                                     .D[12]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Outputs^Data Out 12;
                                     .D[13]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Outputs^Data Out 13;
                                     .D[14]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Outputs^Data Out 14;
                                     .D[15]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Outputs^Data Out 15;
                                     .D[16]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Outputs^Data Out 16;
                                     .D[17]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Outputs^Data Out 17;
                                     .D[18]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Outputs^Data Out 18;
                                     .D[19]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Outputs^Data Out 19;
                                     .D[20]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Outputs^Data Out 20;
                                     .D[21]:=TIIB[MRCO_DRL_03_E05_EL6001]^COM Outputs^Data Out 21
        '}
     //   stComOut_MRCO_SS_PTM_01        AT %Q*  :       EL6outData22B;
        stComOut_MRCO_MSC_PTM_01        AT %Q*  :       EL6outData22B;






    END_VAR




GVL_Devices
^^^^^^^^^^^

::

    //{attribute 'qualified_only'}
    VAR_GLOBAL
        (*Rack Mounted Turbo Pumps*)
        {attribute 'TcLinkTo' := 	'.i_xFaultNC		:=	TIIB[MRCO_PLC_E06_EL1004]^Channel 1^Input;
                                     .i_xAtSpd  		:=	TIIB[MRCO_PLC_E06_EL1004]^Channel 2^Input;
                                     .q_RunDO			:=	TIIB[MRCO_PLC_E07_EL2794]^Channel 1^Output
        '}
        {attribute 'pytmc' := '
            pv: MRCO:MAIN:PTM:01
            io: io
        '}
        MRCO_MAIN_PTM_01 : FB_PTM_TurboDrive;

        {attribute 'TcLinkTo' := 	'.i_xFaultNC		:=	TIIB[MRCO_PLC_E06_EL1004]^Channel 3^Input;
                                     .i_xAtSpd  		:=	TIIB[MRCO_PLC_E06_EL1004]^Channel 4^Input;
                                     .q_RunDO			:=	TIIB[MRCO_PLC_E07_EL2794]^Channel 3^Output
        '}
        {attribute 'pytmc' := '
            pv: MRCO:MAIN:PTM:02
            io: io
        '}
        MRCO_MAIN_PTM_02 : FB_PTM_TurboDrive;

        {attribute 'TcLinkTo' := 	'.i_xFaultNC		:=	TIIB[MRCO_PLC_E08_EL1004]^Channel 1^Input;
                                     .i_xAtSpd  		:=	TIIB[MRCO_PLC_E08_EL1004]^Channel 2^Input;
                                     .q_RunDO			:=	TIIB[MRCO_PLC_E07_EL2794]^Channel 2^Output
        '}
        {attribute 'pytmc' := '
            pv: MRCO:MAIN:PTM:03
            io: io
        '}
        MRCO_MAIN_PTM_03 : FB_PTM_TurboDrive;

        {attribute 'TcLinkTo' := 	'.i_xFaultNC		:=	TIIB[MRCO_PLC_E08_EL1004]^Channel 3^Input;
                                     .i_xAtSpd     		:=	TIIB[MRCO_PLC_E08_EL1004]^Channel 4^Input;
                                     .q_RunDO			:=	TIIB[MRCO_PLC_E07_EL2794]^Channel 4^Output
        '}
        {attribute 'pytmc' := '
            pv: MRCO:MAIN:PTM:04
            io: io
        '}
        MRCO_MAIN_PTM_04 : FB_PTM_TurboDrive;

        (*Onboard Turbo Pumps*)

        {attribute 'TcLinkTo' := 	'.q_xReset 			:=	TIIB[MRCO_PNL1_EP02_EP2624-0002]^Channel 2^Output;
                                     .q_RunDO  			:=	TIIB[MRCO_PNL1_EP02_EP2624-0002]^Channel 1^Output;
                                     .i_xAtSpd			:=	TIIB[MRCO_PNL1_EP01_EP2338-0002]^Channel 1^Input;
                                     .i_xFaultNC		:=	TIIB[MRCO_PNL1_EP01_EP2338-0002]^Channel 2^Input
        '}
        {attribute 'pytmc' := '
            pv: MRCO:ROUGH:PTM:01
            io: io
        '}
        MRCO_ROUGH_PTM_01 : FB_PTM_Pfeiffer;

        //adding Lybold Turbovac pump MRCO-SS-PTM-01
       {attribute 'TcLinkTo' := 	'.i_xFaultNC		:=	TIIB[MRCO_DRL_03_E04_EL1004]^Channel 1^Input;
                                     .i_xAtSpd     		:=	TIIB[MRCO_DRL_03_E04_EL1004]^Channel 2^Input;
                                     .q_RunDO			:=	TIIB[MRCO_DRL_03_E06_EL2794]^Channel 1^Output
        '}
    (*    {attribute 'pytmc' := '
            pv: MRCO:SS:PTM:01
            io: io
        '}

        MRCO_SS_PTM_01 : FB_PTM_TurboDrive;
        *)

        {attribute 'pytmc' := '
            pv: MRCO:MSC:PTM:01
            io: io
        '}
        MRCO_MSC_PTM_01 : FB_PTM_TurboDrive;


    (*Pirani MKS 275 Gauges*)
        {attribute 'TcLinkTo' := 	'.i_iPRESS_R	:=	TIIB[MRCO_PNL1_EP05_EP3174-0002]^AI Standard Channel 1^Value
        '}
        {attribute 'pytmc' := '
            pv: MRCO:MAIN:GPI:01
            io: io
        '}
        MRCO_MAIN_GPI_01 : FB_CVM201;


    (*MicroPirani MKS 925 Gauges*)
        {attribute 'TcLinkTo' := 	'.i_iPRESS_R	:=	TIIB[MRCO_PNL1_EP04_EP3174-0002]^AI Standard Channel 1^Value
        '}
        {attribute 'pytmc' := '
            pv: MRCO:ROUGH:GPI:01
            io: io
        '}
        MRCO_ROUGH_GPI_01 : FB_9XX;

        {attribute 'TcLinkTo' := 	'.i_iPRESS_R	:=	TIIB[MRCO_PNL1_EP04_EP3174-0002]^AI Standard Channel 2^Value
        '}
        {attribute 'pytmc' := '
            pv: MRCO:ROUGH:GPI:02
            io: io
        '}
        MRCO_ROUGH_GPI_02 : FB_9XX;

        {attribute 'TcLinkTo' := 	'.i_iPRESS_R	:=	TIIB[MRCO_PNL1_EP04_EP3174-0002]^AI Standard Channel 3^Value
        '}
        {attribute 'pytmc' := '
            pv: MRCO:ROUGH:GPI:03
            io: io
        '}
        MRCO_ROUGH_GPI_03 : FB_9XX;
        {attribute 'TcLinkTo' := 	'.i_iPRESS_R	:=	TIIB[MRCO_PNL1_EP04_EP3174-0002]^AI Standard Channel 4^Value
        '}
        {attribute 'pytmc' := '
            pv: MRCO:ROUGH:GPI:04
            io: io
        '}
        MRCO_ROUGH_GPI_04 : FB_9XX;

        // adding new GPI 05 for ss chamber
        {attribute 'TcLinkTo' := 	'.i_iPRESS_R	:=	TIIB[MRCO_DRL_03_E10_EL3174-0002]^AI Standard Channel 2^Value
        '}
        {attribute 'pytmc' := '
            pv: MRCO:ROUGH:GPI:05
            io: io
        '}
        MRCO_ROUGH_GPI_05 : FB_9XX;

    (*Hot Cathode MKS 909 Gauges*)
        {attribute 'TcLinkTo' := 	'.i_iPRESS_R	:=	TIIB[MRCO_PNL1_EP05_EP3174-0002]^AI Standard Channel 2^Value;
                                     .q_xHV_DIS		:= 	TIIB[MRCO_PNL1_EP06_EP2624-0002]^Channel 2^Output
        '}
        {attribute 'pytmc' := '
            pv: MRCO:MAIN:GHC:01
            io: io
        '}
            MRCO_MAIN_GHC_01 : FB_MKS909;

        //adding ss chamber GHC HORNET
        {attribute 'TcLinkTo' := 	'    .i_iPRESS_R		:=	TIIB[MRCO_DRL_03_E10_EL3174-0002]^AI Standard Channel 1^Value;
                                         .i_xHV_ON			:=	TIIB[MRCO_DRL_03_E07_EL1084]^Channel 1^Input;
                                         .q_xHV_DIS			:=	TIIB[MRCO_DRL_03_E06_EL2794]^Channel 2^Output
        '}
     (*   {attribute 'pytmc' :=' pv: MRCO:SS:GHC:01'}
       MRCO_SS_GHC_01 : FB_IMG401;
       *)

        {attribute 'pytmc' :=' pv: MRCO:MSC:GHC:01'}
       MRCO_MSC_GHC_01 : FB_IMG401;


    (*Variable Leak Valve*)
        {attribute 'TcLinkTo' := 	'.i_nRawPosition	:=	TIIB[VCN_1_VAT590]^DI TxPDO-Map^Position;
                                     .i_nRawPressure	:=	TIIB[VCN_1_VAT590]^DI TxPDO-Map^Pressure;
                                     .i_eControlMode	:=	TIIB[VCN_1_VAT590]^DI TxPDO-Map^Control mode;
                                     .i_eFatalError		:=	TIIB[VCN_1_VAT590]^DI TxPDO-Map^Fatal error;
                                     .i_stGenStatus 	:=	TIIB[VCN_1_VAT590]^DI TxPDO-Map^General status;
                                     .i_stGenWarnings 	:=	TIIB[VCN_1_VAT590]^DI TxPDO-Map^General warnings;
                                     .i_stExtnWarnings 	:=	TIIB[VCN_1_VAT590]^DI TxPDO-Map^Extended warnings;
                                     .o_nRawPositionSP 	:=	TIIB[VCN_1_VAT590]^DO RxPDO-Map^Position setpoint;
                                     .o_nRawPressureSP 	:=	TIIB[VCN_1_VAT590]^DO RxPDO-Map^Pressure setpoint;
                                     .o_nRawPressure 	:=	TIIB[VCN_1_VAT590]^DO RxPDO-Map^External digital pressure sensor 1;
                                     .o_eCtrlModeSP 	:=	TIIB[VCN_1_VAT590]^DO RxPDO-Map^Control mode setpoint;
                                     .o_stGenCtrlSP 	:=	TIIB[VCN_1_VAT590]^DO RxPDO-Map^General control setpoint;
                                     .i_stVat590PlcDriveRef.aNetId     := TIIB[VCN_1_VAT590]^InfoData^AdsAddr^netId;
                                     .i_stVat590PlcDriveRef.nSlaveAddr := TIIB[VCN_1_VAT590]^InfoData^AdsAddr^port;
                                     .i_bValveEthCatStatus             := TIIB[VCN_1_VAT590]^WcState^WcState
        '}
        {attribute 'pytmc' := 'pv: MRCO:VCN:01'}
        MRCO_VCN_01 : FB_VCN_VAT590;

    (*Normally Closed Valve with Readback*)//ALL VALVES CURRENTLY NO
        {attribute 'TcLinkTo' := 	'.i_xOpnLS	:=	TIIB[MRCO_PNL1_EP07_EP2338-0002]^Channel 1^Input;
                                     .i_xClsLS	:=	TIIB[MRCO_PNL1_EP07_EP2338-0002]^Channel 2^Input;
                                     .q_xOPN_DO	:=	TIIB[MRCO_PNL1_EP07_EP2338-0002]^Channel 11^Output
        '}
        {attribute 'pytmc' := '
            pv: MRCO:ROUGH:VRC:01
            io: io
        '}
        MRCO_ROUGH_VRC_01 : FB_VRC;

        {attribute 'TcLinkTo' := 	'.i_xOpnLS	:=	TIIB[MRCO_PNL1_EP08_EP2338-0002]^Channel 1^Input;
                                     .i_xClsLS	:=	TIIB[MRCO_PNL1_EP08_EP2338-0002]^Channel 2^Input;
                                     .q_xOPN_DO	:=	TIIB[MRCO_PNL1_EP08_EP2338-0002]^Channel 11^Output
        '}
        {attribute 'pytmc' := '
            pv: MRCO:ROUGH:VRC:03
            io: io
        '}
        MRCO_ROUGH_VRC_03 : FB_VRC;

        (*Normally Open Valve with Readback*)

        {attribute 'TcLinkTo' := 	'.i_xOpnLS	:=	TIIB[MRCO_PNL1_EP07_EP2338-0002]^Channel 5^Input;
                                     .i_xClsLS	:=	TIIB[MRCO_PNL1_EP07_EP2338-0002]^Channel 6^Input;
                                     .q_xCLS_DO	:=	TIIB[MRCO_PNL1_EP07_EP2338-0002]^Channel 15^Output
        '}
        {attribute 'pytmc' := '
            pv: MRCO:ROUGH:VRC:02
            io: io
        '}
        MRCO_ROUGH_VRC_02 : FB_VRC_NO;

            //adding a window valve between MRCO main chamber to SS chamber
        {attribute 'TcLinkTo' := 	'.i_xOpnLS	:=	TIIB[MRCO_DRL_03_E01_EL1004]^Channel 1^Input;
                                     .i_xClsLS	:=	TIIB[MRCO_DRL_03_E01_EL1004]^Channel 2^Input;
                                     .q_xOPN_DO	:=	TIIB[MRCO_DRL_03_E02_EL2004]^Channel 1^Output
        '}
    (*    {attribute 'pytmc' := '
            pv: MRCO:SS:VRC:01
            io: io
        '}
        MRCO_SS_VRC_01 : FB_VGC_2S;
        *)

        {attribute 'pytmc' := '
            pv: MRCO:MSC:VRC:01
            io: io
        '}
        MRCO_MSC_VRC_01 : FB_VGC_2S;


        //adding rough line valve in SS chamber
        {attribute 'TcLinkTo' := 	'.i_xOpnLS	:=	TIIB[MRCO_DRL_03_E01_EL1004]^Channel 3^Input;
                                     .i_xClsLS	:=	TIIB[MRCO_DRL_03_E01_EL1004]^Channel 4^Input;
                                     .q_xOPN_DO	:=	TIIB[MRCO_DRL_03_E02_EL2004]^Channel 2^Output
        '}
        {attribute 'pytmc' := '
            pv: MRCO:ROUGH:VRC:04
            io: io
        '}
        MRCO_ROUGH_VRC_04 : FB_VGC_2S;

        //adding NO valve VRC-05 in ss chamber
       {attribute 'TcLinkTo' := 	'.i_xOpnLS	:=	TIIB[MRCO_DRL_03_E03_EL1004]^Channel 1^Input;
                                     .i_xClsLS	:=	TIIB[MRCO_DRL_03_E03_EL1004]^Channel 2^Input;
                                     .q_xCLS_DO	:=	TIIB[MRCO_DRL_03_E02_EL2004]^Channel 3^Output
        '}
        {attribute 'pytmc' := '
            pv: MRCO:ROUGH:VRC:05
            io: io
        '}
        MRCO_ROUGH_VRC_05 : FB_VRC_NO;

    (*Pfeiffer*)
        // They share the same serial port
        st_Pfeiffer_CTRL_MRCO_ROUGH_PTM_01   		: ARRAY[1..20] OF ST_PfeifferControl;
        st_Pfeiffer_RBK_MRCO_ROUGH_PTM_01 			: ARRAY[1..20] OF ST_PfeifferStatus;
        fb_PfeifferCom_MRCO_ROUGH_PTM_01 			: FB_PFEIFFER_COM;

    (*Leybold*)
        st_TD20_RBK_MRCO_MAIN_PTM_01                : ST_TD20Status;
        fb_TD20Com_MRCO_MAIN_PTM_01                 : FB_OERLIKON_TD20_COM;

        st_TD20_RBK_MRCO_MAIN_PTM_02                : ST_TD20Status;
        fb_TD20Com_MRCO_MAIN_PTM_02                 : FB_OERLIKON_TD20_COM;

        st_TD20_RBK_MRCO_MAIN_PTM_03                : ST_TD20Status;
        fb_TD20Com_MRCO_MAIN_PTM_03                 : FB_OERLIKON_TD20_COM;

        st_TD20_RBK_MRCO_MAIN_PTM_04                : ST_TD20Status;
        fb_TD20Com_MRCO_MAIN_PTM_04                 : FB_OERLIKON_TD20_COM;

    (*    st_TD400_RBK_MRCO_SS_PTM_01                : ST_TD400Status;
        fb_TD400Com_MRCO_SS_PTM_01                 : FB_OERLIKON_TD400_COM;
        st_TD400_CTRL_MRCO_SS_PTM_01               : ST_TD400Control;
        fb_TD400SerialIO_MRCO_SS_PTM_01            : FB_OERLIKON_TD400_TO_PTM;
        *)

        st_TD400_RBK_MRCO_MSC_PTM_01                : ST_TD400Status;   //need to update the library
        fb_TD400Com_MRCO_MSC_PTM_01                 : FB_OERLIKON_TD400_COM;
        st_TD400_CTRL_MRCO_MSC_PTM_01               : ST_TD400Control;
        fb_TD400SerialIO_MRCO_MSC_PTM_01            : FB_OERLIKON_TD400_TO_PTM;


    END_VAR


Related:
    * `MAIN`_


GVL_PLC_Interfaces
^^^^^^^^^^^^^^^^^^

::

    //{attribute 'qualified_only'}
    VAR_GLOBAL

        //Outputs
        fb_ADS_WATCHDOG_VAC_MRCO_TMO:FB_ADS_WATCHDOG;
        (*ETHERCAT BRIDGE COM STATUS*)
        //0: Other side is in OP state, >0: Error
        {attribute 'TcLinkTo' := 	'TIIB[MRCO_PLC_E04_EL6692]^SYNC Inputs^TxPDO state
        '}
        xEcatBridge_TxPDO_state AT %I* : BOOL;

        //0: External device connected, 1: External device not connected
        {attribute 'TcLinkTo' := 	'TIIB[MRCO_PLC_E04_EL6692]^SYNC Inputs^External device not connected
        '}
        xEcatBridge_External_device_not_connected AT %I* : BOOL;

        //0 = Data valid, 1 = Data invalid
        {attribute 'TcLinkTo' := 	'TIIB[MRCO_PLC_E04_EL6692]^WcState^WcState
        '}
        xEcatBridge_WcState AT %I* : BOOL;

        (*I/O Inputs from TMO Beamline*)
        {attribute 'TcLinkTo' := 	'TIIB[MRCO_PLC_E04_EL6692]^IO Inputs^HUTCH_PLC_NAME
        '}
        sHUTCH_PLC_NAME AT %I* : STRING(8);

        {attribute 'TcLinkTo' := 	'TIIB[MRCO_PLC_E04_EL6692]^IO Inputs^TMO_ROUGH1_VRC_01_OPEN_LS
        '}
        xTMO_ROUGH1_VRC_01_OPEN_LS AT %I* : BOOL;

        {attribute 'TcLinkTo' := 	'TIIB[MRCO_PLC_E04_EL6692]^IO Inputs^TMO_ROUGH2_VRC_01_OPEN_LS
        '}
        xTMO_ROUGH2_VRC_01_OPEN_LS AT %I* : BOOL;


        (*I/O Outputs to TMO Beamline*)
        {attribute 'TcLinkTo' := 	'TIIB[MRCO_PLC_E04_EL6692]^IO Outputs^ENDSTATION_PLC_NAME
        '}
        sENDSTATION_PLC_NAME AT %Q* : STRING(8):= 'MRCO';

        {attribute 'TcLinkTo' := 	'TIIB[MRCO_PLC_E04_EL6692]^IO Outputs^IP1_ROUGH_VRC_01_OPEN_LS
        '}
        xIP1_ROUGH_VRC_01_OPEN_LS AT %Q* : BOOL;

        {attribute 'TcLinkTo' := 	'TIIB[MRCO_PLC_E04_EL6692]^IO Outputs^IP1_ROUGH_VRC_02_OPEN_LS
        '}
        xIP1_ROUGH_VRC_02_OPEN_LS AT %Q* : BOOL;

        {attribute 'TcLinkTo' := 	'TIIB[MRCO_PLC_E04_EL6692]^IO Outputs^IP1_ROUGH_VRC_03_OPEN_LS
        '}
        xIP1_ROUGH_VRC_03_OPEN_LS AT %Q* : BOOL;

        {attribute 'TcLinkTo' := 	'TIIB[MRCO_PLC_E04_EL6692]^IO Outputs^IP1_TURBOS_ALL_AtSpd
        '}
        {attribute 'pytmc' := '
            pv: PLC:MRCO:VAC:IP1_TURBOS_ALL_ATSPD
            io:i
        '}
        xIP1_TURBOS_ALL_AtSpd AT %Q* : BOOL;

        {attribute 'TcLinkTo' := 	'TIIB[MRCO_PLC_E04_EL6692]^IO Outputs^IP1_MAIN_xAT_VAC
        '}
        xIP1_MAIN_xAT_VAC AT %Q* : BOOL;

        {attribute 'TcLinkTo' := 	'TIIB[MRCO_PLC_E04_EL6692]^IO Outputs^IP1_MAIN_xPRESS_OK
        '}
        xIP1_MAIN_xPRESS_OK AT %Q* : BOOL;

        {attribute 'TcLinkTo' := 	'TIIB[MRCO_PLC_E04_EL6692]^IO Outputs^IP1_MAIN_rPRESS
        '}
        rIP1_MAIN_rPRESS AT %Q* : REAL;

        {attribute 'TcLinkTo' := 	'TIIB[MRCO_PLC_E04_EL6692]^IO Outputs^IP1_HV_SAFETY_ENABLE
        '}
        xIP1_HV_SAFETY_ENABLE AT %Q* : BOOL;


        (*ISEG HV Crate Safety Loop*)
        {attribute 'TcLinkTo' := 	'TIIB[MRCO_PLC_E09_EL2794]^Channel 1^Output
        '}
        {attribute 'pytmc' := '
            pv: PLC:MRCO:VAC:HV_SAFETY_ENABLE
            io:i
        '}
        xHighVoltageSafteyLoopEnable AT %Q* : BOOL := FALSE; (*When Enables the High voltage Saftey loop is closed and HV can start.*)
    END_VAR




GVL_TC
^^^^^^

::

    //{attribute 'qualified_only'}
    VAR_GLOBAL
        {attribute 'TcLinkTo' := 	'.iRaw 			:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 1^Value;
                                     .bError  		:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 1^Status^Error;
                                     .bUnderrange 	:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 1^Status^Underrange;
                                     .bOverrange  	:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 1^Status^Overrange
        '}
        {attribute 'pytmc' := '
            pv: MRCO:STC:01
            io: io
        '}
        TC_01 : FB_TempSensor;
        {attribute 'TcLinkTo' := 	'.iRaw 			:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 2^Value;
                                     .bError  		:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 2^Status^Error;
                                     .bUnderrange 	:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 2^Status^Underrange;
                                     .bOverrange  	:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 2^Status^Overrange
        '}
        {attribute 'pytmc' := '
            pv: MRCO:STC:02
            io: io
        '}
        TC_02 : FB_TempSensor;
        {attribute 'TcLinkTo' := 	'.iRaw 			:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 3^Value;
                                     .bError  		:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 3^Status^Error;
                                     .bUnderrange 	:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 3^Status^Underrange;
                                     .bOverrange  	:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 3^Status^Overrange
        '}
        {attribute 'pytmc' := '
            pv: MRCO:STC:03
            io: io
        '}
        TC_03 : FB_TempSensor;
        {attribute 'TcLinkTo' := 	'.iRaw 			:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 4^Value;
                                     .bError  		:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 4^Status^Error;
                                     .bUnderrange 	:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 4^Status^Underrange;
                                     .bOverrange  	:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 4^Status^Overrange
        '}
        {attribute 'pytmc' := '
            pv: MRCO:STC:04
            io: io
        '}
        TC_04 : FB_TempSensor;
        {attribute 'TcLinkTo' := 	'.iRaw 			:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 5^Value;
                                     .bError  		:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 5^Status^Error;
                                     .bUnderrange 	:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 5^Status^Underrange;
                                     .bOverrange  	:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 5^Status^Overrange
        '}
        {attribute 'pytmc' := '
            pv: MRCO:STC:05
            io: io
        '}
        TC_05 : FB_TempSensor;
        {attribute 'TcLinkTo' := 	'.iRaw 			:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 6^Value;
                                     .bError  		:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 6^Status^Error;
                                     .bUnderrange 	:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 6^Status^Underrange;
                                     .bOverrange  	:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 6^Status^Overrange
        '}
        {attribute 'pytmc' := '
            pv: MRCO:STC:06
            io: io
        '}
        TC_06 : FB_TempSensor;
        {attribute 'TcLinkTo' := 	'.iRaw 			:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 7^Value;
                                     .bError  		:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 7^Status^Error;
                                     .bUnderrange 	:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 7^Status^Underrange;
                                     .bOverrange  	:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 7^Status^Overrange
        '}
        {attribute 'pytmc' := '
            pv: MRCO:STC:07
            io: io
        '}
        TC_07 : FB_TempSensor;
        {attribute 'TcLinkTo' := 	'.iRaw 			:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 8^Value;
                                     .bError  		:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 8^Status^Error;
                                     .bUnderrange 	:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 8^Status^Underrange;
                                     .bOverrange  	:=	TIIB[MRCO_PLC_E10_EL3318]^TC Channel 8^Status^Overrange
        '}
        {attribute 'pytmc' := '
            pv: MRCO:STC:08
            io: io
        '}
        TC_08 : FB_TempSensor;
    END_VAR




GVL_Variables
^^^^^^^^^^^^^

::

    //{attribute 'qualified_only'}
    VAR_GLOBAL
        {attribute 'pytmc' := '
            pv: PLC:MRCO:VAC:OVRDON
            io: io
        '}
        xSystemOverrideMode_MRCO	: BOOL := FALSE;

        {attribute 'pytmc' := '
            pv: PLC:MRCO:ON:BEAMLINE
            io:i
        '}
        xOnBeamline :	BOOL := FALSE;

        rHighVoltageMinPressure : REAL := 1e-05; (*Hard coded High voltage Minimum Enable Pressure*)

    END_VAR




POUs
----


DIAGNOSTICS
^^^^^^^^^^^

::

    PROGRAM DIAGNOSTICS
    VAR
        //Change the PLC String Name to the actual PLC NAME
        sPLCName :STRING := 'PLC-MRCO-VAC-01';
        //Link the sAMSNetID to the Etherat Master netID
        i_sAMSNetID AT %I*: AMSNETID;
        // DO NOT CHANGE
        sAMSNetID : STRING; //used for EPICS PV
        sLibVersion_LCLS_General : STRING;(* := stLibVersion_LCLS_General.sVersion*) ;
        fbEcatDiag:FB_EcatDiag;
        bAllSlaveStateGood : BOOL;
        bMasterStateGood :BOOL;
        iMasterState: WORD;
        sMasterState:STRING;
        nSlaveNumber : UINT;
        aiSlaveStates: ARRAY[1..256] OF BYTE;
        aEcSlaveInfo :  ARRAY[1..256] OF ST_EcDevice;
    END_VAR
    // Instaniating a call to the fbEcatDiag
    fbEcatDiag(
        I_AMSNetId:=i_sAMSNetID ,
        i_xFirstPass:= _TaskInfo[1].FirstCycle,
        q_xAllSlaveStatesGood=> bAllSlaveStateGood ,
        q_anTermStates=> aiSlaveStates,
        q_xMasterStateGood=>bMasterStateGood ,
        q_nMasterState=> iMasterState,
        q_sMasterState=> sMasterState ,
        q_astEcConfSlaveInfo=> aEcSlaveInfo ,
        q_nSlaves=> nSlaveNumber);

    END_PROGRAM




F_Turbo_NC_NO_Valve_Logic
^^^^^^^^^^^^^^^^^^^^^^^^^

::

    FUNCTION F_Turbo_NC_NO_Valve_Logic : BOOL
    VAR_INPUT
        i_stTurbo : ST_PTM; // Turbo Pump
        i_stISG : ST_VG; //Gauge measuring inlet Pressure e.g Pirani
        i_stBSG : ST_VG; //Gauge measureing backing pressure
    //    iq_stValve_NO : ST_VRC_NO; //Normally Open Valve directly sharing turbo pump vaccum volume.   request by James on 10-14-24
        iq_stValve_NC : ST_VRC; //Normally Closed Valve directly sharing turbo pump vaccum volume.
        iq_stValve_NC_second :	ST_VRC; //Normally Closed Valve on the other side of NO valve that also connects to roughing line.
        EcatBridge_Error_Present	:	BOOL; // ADS Communication: Watchdog and ADS Read Error Bit
        iq_stRoughRoughValve_NC_xOpnLS: BOOL; //Normally Closed Valve Downstream of iq_stValve_NC in Beamline Roughing Line, Open Limit Switch.
        iq_stRoughRoughValve_NC_second_xOpenLS: BOOL; //Normally Closed Valve Downstream of iq_stValve_NC_second in Beamline Roughing Line, Open Limit Switch.
        x_onBeamline :	BOOL; //Whether the  Turbopump/Endstation is mounted on the beamline or not.
    END_VAR
    VAR
    END_VAR
    IF (x_onBeamline) THEN
        F_Turbo_NC_NO_Valve_Logic := (i_stISG.xPRESS_OK AND i_stISG.rPRESS < i_stTurbo.rInletPressureSP) AND
                                        (i_stBSG.xPRESS_OK AND i_stBSG.rPRESS < i_stTurbo.rBackingPressureSP) AND
                                      (iq_stValve_NC.i_xOpnLS AND iq_stRoughRoughValve_NC_xOpnLS) AND  //change in 12-16-24
                                     (*iq_stValve_NO.i_xOpnLS AND *)iq_stValve_NC_second.i_xOpnLS AND   // request by James on 10-14-24
                                    ( iq_stRoughRoughValve_NC_second_xOpenLS AND (NOT EcatBridge_Error_Present));
    ELSE
        F_Turbo_NC_NO_Valve_Logic := (i_stISG.xPRESS_OK AND i_stISG.rPRESS < i_stTurbo.rInletPressureSP) AND
                               (i_stBSG.xPRESS_OK AND i_stBSG.rPRESS < i_stTurbo.rBackingPressureSP) AND
                                (iq_stValve_NC.i_xOpnLS AND ((*iq_stValve_NO.i_xOpnLS AND*) iq_stValve_NC_second.i_xOpnLS));
    END_IF

    END_FUNCTION




MAIN
^^^^

::

    PROGRAM MAIN
    VAR
        fbLogHandler : FB_LogHandler;

        //TMO Interface
        xEcatBridge_COM_ERROR : BOOL;
        b_TurboPumpRunningFlag : BOOL;
        b_SS_PTM_01_ILKOK : BOOL := FALSE;
        TurboPumpTOF : TOF;
        TurboPumpDelayTime : TIME := T#30s;

        fbGetCurTaskIndex : GETCURTASKINDEX;

        F_Turbo_TESTY: BOOL;

       dummy_FFFO : FB_HardwareFFOutput;
       dummy_fbArbiter1    :   FB_Arbiter(1);
       r_DPPRESS_SP  : REAL := 10;
       i_stTurbo : ST_PTM;



    END_VAR
    r_DPPRESS_SP := ABS(MRCO_ROUGH_GPI_02.PG.rPRESS - MRCO_ROUGH_GPI_04.PG.rPRESS)*2 /(MRCO_ROUGH_GPI_02.PG.rPRESS + MRCO_ROUGH_GPI_04.PG.rPRESS);
    // remove TMO_ROUGH2_VRC_01_OPEN_LS for all MRCO turbo pump conditions
    IF (xOnBeamline) THEN
        F_Turbo_TESTY := (MRCO_MAIN_GPI_01.PG.xPRESS_OK AND MRCO_MAIN_GPI_01.PG.rPRESS < MRCO_ROUGH_PTM_01.iq_stPtm.rInletPressureSP) AND
                                        (MRCO_ROUGH_GPI_02.PG.xPRESS_OK AND MRCO_ROUGH_GPI_02.PG.rPRESS < MRCO_ROUGH_PTM_01.iq_stPtm.rBackingPressureSP) AND
                                     ((MRCO_ROUGH_VRC_01.iq_stValve.i_xOpnLS) OR
                                     (MRCO_ROUGH_VRC_02.iq_stValve.i_xOpnLS AND (MRCO_ROUGH_VRC_03.iq_stValve.i_xOpnLS AND
                                     xTMO_ROUGH1_VRC_01_OPEN_LS)))AND (NOT xEcatBridge_COM_ERROR);
    ELSE
        F_Turbo_TESTY := (MRCO_MAIN_GPI_01.PG.xPRESS_OK AND MRCO_MAIN_GPI_01.PG.rPRESS < MRCO_ROUGH_PTM_01.iq_stPtm.rInletPressureSP) AND
                                        (MRCO_ROUGH_GPI_02.PG.xPRESS_OK AND MRCO_ROUGH_GPI_02.PG.rPRESS < MRCO_ROUGH_PTM_01.iq_stPtm.rBackingPressureSP) AND
                                     (MRCO_ROUGH_VRC_01.iq_stValve.i_xOpnLS OR MRCO_ROUGH_VRC_02.iq_stValve.i_xOpnLS OR MRCO_ROUGH_VRC_03.iq_stValve.i_xOpnLS);
    END_IF

    ///
    fbLogHandler();
    // Run the Diagnostics PRG
    DIAGNOSTICS();

    (*EtherCAT Bridge Status*)
    //xEcatBridge_COM_ERROR := TRUE means that there is an EtherCAT Bridge Communication error.
    xEcatBridge_COM_ERROR := (xEcatBridge_TxPDO_state OR xEcatBridge_External_device_not_connected OR xEcatBridge_WcState);

    xOnBeamline := (xEcatBridge_COM_ERROR = FALSE) AND (sHUTCH_PLC_NAME = 'TMO');

    (*TurboPump running Flag with 30 second Turn Off delay.*)
    b_TurboPumpRunningFlag :=
        (MRCO_MAIN_PTM_01.iq_stPtm.eState = E_PumpState.pumpRUNNING)  AND
        (MRCO_MAIN_PTM_02.iq_stPtm.eState = E_PumpState.pumpRUNNING) AND
        (MRCO_MAIN_PTM_03.iq_stPtm.eState = E_PumpState.pumpRUNNING) AND
        (MRCO_MAIN_PTM_04.iq_stPtm.eState = E_PumpState.pumpRUNNING) AND
        (MRCO_ROUGH_PTM_01.iq_stPtm.eState = E_PumpState.pumpRUNNING) AND
        (MRCO_MSC_PTM_01.iq_stPtm.estate = E_PumpState.pumpRUNNING);
       // (MRCO_SS_PTM_01.iq_stPtm.estate = E_PumpState.pumpRUNNING);
    TurboPumpTOF(IN:= b_TurboPumpRunningFlag, PT := TurboPumpDelayTime);
    xIP1_TURBOS_ALL_AtSpd:= TurboPumpTOF.Q;
    (*High Voltage Saftey Loop*)// rHighVoltageMinPressure = 1e-05; (*Hard coded High voltage Minimum Enable Pressure*)
    xHighVoltageSafteyLoopEnable:= (MRCO_MAIN_GHC_01.IG.rPRESS <= rHighVoltageMinPressure) AND (MRCO_MAIN_GHC_01.IG.xPRESS_OK = TRUE);

    (*PIRANI Gauges*)
        MRCO_MAIN_GPI_01.M_SetBits(32767);
        MRCO_MAIN_GPI_01(PG=>);

    (*uPIRANI Gauges*)
        MRCO_ROUGH_GPI_01.M_SetBits(32767);
        MRCO_ROUGH_GPI_01(PG=>);
        MRCO_ROUGH_GPI_02.M_SetBits(32767);
        MRCO_ROUGH_GPI_02(PG=>);
        MRCO_ROUGH_GPI_03.M_SetBits(32767);
        MRCO_ROUGH_GPI_03(PG=>);
        MRCO_ROUGH_GPI_04.M_SetBits(32767);
        MRCO_ROUGH_GPI_04(PG=>);
        MRCO_ROUGH_GPI_05.M_SetBits(30518);
        MRCO_ROUGH_GPI_05(PG=>);

    (*Cold Cathode Gauges*)

    (*Hot Cathode Gauges*)
        MRCO_MAIN_GHC_01.M_SetBits(32767);
        MRCO_MAIN_GHC_01(PG:=MRCO_MAIN_GPI_01.PG,IG=>);
     //   MRCO_SS_GHC_01.M_SetBits(30518);
      //  MRCO_SS_GHC_01(PG:=MRCO_ROUGH_GPI_05.PG,IG=>);

        MRCO_MSC_GHC_01.M_SetBits(30518);
        MRCO_MSC_GHC_01(PG:=MRCO_ROUGH_GPI_05.PG,IG=>);


    (*Variable Leak Valve*)
        MRCO_VCN_01(bExtIlkOK:= TRUE, IG := MRCO_MAIN_GHC_01.IG);

    (*TURBO Pumps
    *In general, if turbo pump setpoints are above the pirani guage readings or there is no downstream open path to a roughing pump, the turbo pump will close.
    *
    *)
    // all pumps remove contigency of VRC02 as James request on 10-14-24
        MRCO_MAIN_PTM_01(i_xExtILKOk:= F_Turbo_NC_NO_Valve_Logic(
                            i_stTurbo:= MRCO_MAIN_PTM_01.iq_stPtm,
                            i_stISG:= MRCO_MAIN_GPI_01.PG,
                            i_stBSG:= MRCO_ROUGH_GPI_02.PG,
                   (*        iq_stValve_NO:= MRCO_ROUGH_VRC_02.iq_stValve, *)
                            iq_stValve_NC:= MRCO_ROUGH_VRC_01.iq_stValve,
                            iq_stValve_NC_second:= MRCO_ROUGH_VRC_03.iq_stValve,
                            EcatBridge_Error_Present:= xEcatBridge_COM_ERROR,
                            iq_stRoughRoughValve_NC_xOpnLS:= TRUE, (* xTMO_ROUGH2_VRC_01_OPEN_LS, *)//request by James 02-2025: Set it TRUE to remove tmo_rough2_vrc_01 contigency for all pumps in MRCO
                            iq_stRoughRoughValve_NC_second_xOpenLS:=xTMO_ROUGH1_VRC_01_OPEN_LS,
                            x_onBeamline:= xOnBeamline),
                        iq_stPtm=> );

        MRCO_MAIN_PTM_02(i_xExtILKOk:= F_Turbo_NC_NO_Valve_Logic(
                            i_stTurbo:= MRCO_MAIN_PTM_02.iq_stPtm,
                            i_stISG:= MRCO_MAIN_GPI_01.PG,
                            i_stBSG:= MRCO_ROUGH_GPI_02.PG,
                          (*  iq_stValve_NO:= MRCO_ROUGH_VRC_02.iq_stValve, *)
                            iq_stValve_NC:= MRCO_ROUGH_VRC_01.iq_stValve,
                            iq_stValve_NC_second:= MRCO_ROUGH_VRC_03.iq_stValve,
                            EcatBridge_Error_Present:= xEcatBridge_COM_ERROR,
                            iq_stRoughRoughValve_NC_xOpnLS:= TRUE, (*xTMO_ROUGH2_VRC_01_OPEN_LS, *) //request by James 02-2025: Set it TRUE to remove tmo_rough2_vrc_01 contigency for all pumps in MRCO
                            iq_stRoughRoughValve_NC_second_xOpenLS:=xTMO_ROUGH1_VRC_01_OPEN_LS,
                            x_onBeamline:= xOnBeamline),
                        iq_stPtm=> );

        MRCO_MAIN_PTM_03(i_xExtILKOk:= F_Turbo_NC_NO_Valve_Logic(
                            i_stTurbo:= MRCO_MAIN_PTM_03.iq_stPtm,
                            i_stISG:= MRCO_MAIN_GPI_01.PG,
                            i_stBSG:= MRCO_ROUGH_GPI_02.PG,
                         (*   iq_stValve_NO:= MRCO_ROUGH_VRC_02.iq_stValve, *)
                            iq_stValve_NC:= MRCO_ROUGH_VRC_01.iq_stValve,
                            iq_stValve_NC_second:= MRCO_ROUGH_VRC_03.iq_stValve,
                            EcatBridge_Error_Present:= xEcatBridge_COM_ERROR,
                            iq_stRoughRoughValve_NC_xOpnLS:= TRUE, (*xTMO_ROUGH2_VRC_01_OPEN_LS, *) //request by James 02-2025: Set it TRUE to remove tmo_rough2_vrc_01 contigency for all pumps in MRCO
                            iq_stRoughRoughValve_NC_second_xOpenLS:=xTMO_ROUGH1_VRC_01_OPEN_LS,
                            x_onBeamline:= xOnBeamline),
                        iq_stPtm=> );

        MRCO_MAIN_PTM_04(i_xExtILKOk:= F_Turbo_NC_NO_Valve_Logic(
                            i_stTurbo:= MRCO_MAIN_PTM_04.iq_stPtm,
                            i_stISG:= MRCO_MAIN_GPI_01.PG,
                            i_stBSG:= MRCO_ROUGH_GPI_02.PG,
                          (*  iq_stValve_NO:= MRCO_ROUGH_VRC_02.iq_stValve, *)
                            iq_stValve_NC:= MRCO_ROUGH_VRC_01.iq_stValve,
                            iq_stValve_NC_second:= MRCO_ROUGH_VRC_03.iq_stValve,
                            EcatBridge_Error_Present:= xEcatBridge_COM_ERROR,
                            iq_stRoughRoughValve_NC_xOpnLS:= TRUE, (*xTMO_ROUGH2_VRC_01_OPEN_LS, *)//request by James 02-2025: Set it TRUE to remove tmo_rough2_vrc_01 contigency for all pumps in MRCO
                            iq_stRoughRoughValve_NC_second_xOpenLS:=xTMO_ROUGH1_VRC_01_OPEN_LS,
                            x_onBeamline:= xOnBeamline),
                        iq_stPtm=> );

        MRCO_ROUGH_PTM_01(i_xExtILKOk:= F_Turbo_NC_NO_Valve_Logic(
                            i_stTurbo:= MRCO_ROUGH_PTM_01.iq_stPtm,
                            i_stISG:= MRCO_MAIN_GPI_01.PG,
                            i_stBSG:= MRCO_ROUGH_GPI_02.PG,
                        (*   iq_stValve_NO:= MRCO_ROUGH_VRC_02.iq_stValve, *)
                            iq_stValve_NC:= MRCO_ROUGH_VRC_01.iq_stValve,
                            iq_stValve_NC_second:= MRCO_ROUGH_VRC_03.iq_stValve,
                            EcatBridge_Error_Present:= xEcatBridge_COM_ERROR,
                            iq_stRoughRoughValve_NC_xOpnLS:= TRUE, (*xTMO_ROUGH2_VRC_01_OPEN_LS, *)//request by James 02-2025: Set it TRUE to remove tmo_rough2_vrc_01 contigency for all pumps in MRCO
                            iq_stRoughRoughValve_NC_second_xOpenLS:=xTMO_ROUGH1_VRC_01_OPEN_LS,
                            x_onBeamline:= xOnBeamline),
                        iq_stPtm=> );

             MRCO_MSC_PTM_01(i_xExtILKOk:=b_SS_PTM_01_ILKOK );

    IF (xOnBeamline) THEN
        b_SS_PTM_01_ILKOK := (MRCO_ROUGH_GPI_05.PG.xPRESS_OK AND MRCO_ROUGH_GPI_05.PG.rPRESS < i_stTurbo.rBackingPressureSP) AND
                                     ((MRCO_ROUGH_VRC_01.i_xOpnLS AND xTMO_ROUGH1_VRC_01_OPEN_LS AND MRCO_ROUGH_VRC_05.i_xOpnLS) OR
                                     (MRCO_ROUGH_VRC_04.i_xOpnLS AND MRCO_ROUGH_VRC_03.i_xOpnLS AND xTMO_ROUGH2_VRC_01_OPEN_LS) OR
                                     (MRCO_ROUGH_VRC_02.i_xOpnLS AND MRCO_ROUGH_VRC_04.i_xOpnLS AND xTMO_ROUGH1_VRC_01_OPEN_LS)
                                      AND (NOT xEcatBridge_COM_ERROR));
    ELSE
       b_SS_PTM_01_ILKOK := (MRCO_ROUGH_GPI_05.PG.xPRESS_OK AND MRCO_ROUGH_GPI_05.PG.rPRESS < i_stTurbo.rBackingPressureSP) AND
                                     ((MRCO_ROUGH_VRC_01.i_xOpnLS  AND MRCO_ROUGH_VRC_05.i_xOpnLS) OR
                                     (MRCO_ROUGH_VRC_04.i_xOpnLS AND MRCO_ROUGH_VRC_03.i_xOpnLS ) OR
                                     (MRCO_ROUGH_VRC_02.i_xOpnLS AND MRCO_ROUGH_VRC_04.i_xOpnLS ));

    END_IF




    (*Serial Communication*)
    (*Assign adresses to the pfeiffer controllers connected to this serial terminal*)
    st_Pfeiffer_CTRL_MRCO_ROUGH_PTM_01[1].iSerialAddress :=1;
    st_Pfeiffer_CTRL_MRCO_ROUGH_PTM_01[1].xEnableComm := TRUE;
    (* Instanitate the Function block for serial communication with Pfeiffer*)
    fb_PfeifferCom_MRCO_ROUGH_PTM_01(astPfeifferControl := st_Pfeiffer_CTRL_MRCO_ROUGH_PTM_01,
                                     astPfeifferStatus:= st_Pfeiffer_RBK_MRCO_ROUGH_PTM_01,
                                  SerialRXBuffer:= SerialRXBuffer_MRCO_ROUGH_PTM_01,
                                  SerialTXBuffer:= SerialTXBuffer_MRCO_ROUGH_PTM_01);
    (* Copy Status Pv's into the PTM structure*)
    MRCO_ROUGH_PTM_01.M_Serial_IO(st_Pfeiffer_RBK:= st_Pfeiffer_RBK_MRCO_ROUGH_PTM_01[1], st_Pfeiffer_CTRL:= st_Pfeiffer_CTRL_MRCO_ROUGH_PTM_01[1]);

    //Leybolds
    fb_TD20Com_MRCO_MAIN_PTM_01(SerialRXBuffer:= SerialRXBuffer_MRCO_MAIN_PTM_01,
                                                        SerialTXBuffer:= SerialTXBuffer_MRCO_MAIN_PTM_01,
                                                        astTD20Status=> st_TD20_RBK_MRCO_MAIN_PTM_01);
    MRCO_MAIN_PTM_01.M_Serial_IO(i_st_TD20_RBK:= st_TD20_RBK_MRCO_MAIN_PTM_01);

    fb_TD20Com_MRCO_MAIN_PTM_02(SerialRXBuffer:= SerialRXBuffer_MRCO_MAIN_PTM_02,
                                                        SerialTXBuffer:= SerialTXBuffer_MRCO_MAIN_PTM_02,
                                                        astTD20Status=> st_TD20_RBK_MRCO_MAIN_PTM_02);
    MRCO_MAIN_PTM_02.M_Serial_IO(i_st_TD20_RBK:= st_TD20_RBK_MRCO_MAIN_PTM_02);

    fb_TD20Com_MRCO_MAIN_PTM_03(SerialRXBuffer:= SerialRXBuffer_MRCO_MAIN_PTM_03,
                                                        SerialTXBuffer:= SerialTXBuffer_MRCO_MAIN_PTM_03,
                                                        astTD20Status=> st_TD20_RBK_MRCO_MAIN_PTM_03);
    MRCO_MAIN_PTM_03.M_Serial_IO(i_st_TD20_RBK:= st_TD20_RBK_MRCO_MAIN_PTM_03);

    fb_TD20Com_MRCO_MAIN_PTM_04(SerialRXBuffer:= SerialRXBuffer_MRCO_MAIN_PTM_04,
                                                        SerialTXBuffer:= SerialTXBuffer_MRCO_MAIN_PTM_04,
                                                        astTD20Status=> st_TD20_RBK_MRCO_MAIN_PTM_04);
    MRCO_MAIN_PTM_04.M_Serial_IO(i_st_TD20_RBK:= st_TD20_RBK_MRCO_MAIN_PTM_04);



    fb_TD400SerialIO_MRCO_MSC_PTM_01(iq_stPTM := MRCO_MSC_PTM_01.iq_stPtm,
                                        iq_stTD400Control := st_TD400_CTRL_MRCO_MSC_PTM_01,
                                        iq_stTD400Status := st_TD400_RBK_MRCO_MSC_PTM_01);
    fb_TD400Com_MRCO_MSC_PTM_01(SerialRXBuffer := SerialRXBuffer_MRCO_MSC_PTM_01,
                                   SerialTXBuffer := SerialTXBuffer_MRCO_MSC_PTM_01,
                                   stTD400Control := st_TD400_CTRL_MRCO_MSC_PTM_01,
                                   stTD400Status => st_TD400_RBK_MRCO_MSC_PTM_01);


    (*Vacuum Gate Valve*)
        fbGetCurTaskIndex();//getting index for first cycle of PLC operation

        //VRC-Normally Closed: VRC-01
        //If OnBeamline then stay open.
        IF(xOnBeamline) THEN
            MRCO_ROUGH_VRC_01.M_Set_OPN_SW(TRUE);
            MRCO_ROUGH_VRC_01(
            i_xExtILK_OK:= TRUE,
            i_xOverrideMode:= xSystemOverrideMode_MRCO,
            iq_stValve=> );
        ELSE
            //MRCO:ROUGH:VRC:01 can open when the pressure across the valve is below 150 torr
            MRCO_ROUGH_VRC_01(
            i_xExtILK_OK:= (ABS(MRCO_ROUGH_GPI_01.PG.rPRESS - MRCO_ROUGH_GPI_02.PG.rPRESS)<150.0),
            i_xOverrideMode:= xSystemOverrideMode_MRCO,
            iq_stValve=> );
        END_IF


        //Normally Open Bypass Valve: VRC-02, free to open and close.

        MRCO_ROUGH_VRC_02(
        i_xExtILK_OK:= TRUE,
        i_xOverrideMode:= xSystemOverrideMode_MRCO,
        iq_stValve=> );

        //Normally Open Bypass Valve : VRC_05 interlock with VRC_04

        IF (xOnBeamline AND MRCO_ROUGH_VRC_04.iq_stValve.i_xOpnLS) THEN
            MRCO_ROUGH_VRC_05.M_Set_CLS_SW(TRUE);
        END_IF

        MRCO_ROUGH_VRC_05(
        i_xExtILK_OK:= TRUE,
        i_xOverrideMode:= xSystemOverrideMode_MRCO,
        iq_stValve=> );

        //VRC-Normally Closed:VRC_03
        //If OnBeamline then stay open.
        IF(xOnBeamline) THEN
            MRCO_ROUGH_VRC_03.M_Set_OPN_SW(TRUE);
            MRCO_ROUGH_VRC_03(
            i_xExtILK_OK:= TRUE,
            i_xOverrideMode:= xSystemOverrideMode_MRCO,
            iq_stValve=> );
        ELSE
            MRCO_ROUGH_VRC_03(//MRCO:ROUGH:VRC:03 can open when the pressure across the valve is below 1000 torr when it is not on beamline
            i_xExtILK_OK:= (ABS(MRCO_ROUGH_GPI_03.PG.rPRESS - MRCO_ROUGH_GPI_04.PG.rPRESS)<1000.0),
            i_xOverrideMode:= xSystemOverrideMode_MRCO,
            iq_stValve=> );
        END_IF

    //VRC-Normally Closed, interlock with VRC_05

     MRCO_ROUGH_VRC_04(
                    i_stUSG := MRCO_ROUGH_GPI_04.PG,
                    i_stDSG:= MRCO_ROUGH_GPI_05.PG,
                    i_xDis_DPIlk := FALSE,
                    i_xEPS_OK := TRUE,
                    i_xPMPS_OK := TRUE ,
                    i_xExt_OK := MRCO_ROUGH_VRC_05.iq_stValve.i_xClsLS,
                    i_xOverrideMode := xSystemOverrideMode_MRCO,
                    i_xReset := False,
                    io_fbFFHWO :=dummy_FFFO,
                    fbArbiter := dummy_fbArbiter1);



     MRCO_MSC_VRC_01(
                    i_stUSG := MRCO_MAIN_GHC_01.IG,
                    i_stDSG:= MRCO_MSC_GHC_01.IG,
                    i_xDis_DPIlk := FALSE,
                    i_xEPS_OK := TRUE,
                    i_xPMPS_OK := TRUE ,
                    i_xExt_OK := TRUE,
                    i_xOverrideMode := xSystemOverrideMode_MRCO,
                    i_xReset := False,
                    io_fbFFHWO :=dummy_FFFO,
                    fbArbiter := dummy_fbArbiter1);




    (*Update EtherCAT Bridge Outputs*)

    xIP1_ROUGH_VRC_01_OPEN_LS 	:=	MRCO_ROUGH_VRC_01.M_IsOpen();
    xIP1_ROUGH_VRC_02_OPEN_LS	:=	MRCO_ROUGH_VRC_02.M_IsOpen();
    xIP1_ROUGH_VRC_03_OPEN_LS 	:= 	MRCO_ROUGH_VRC_03.M_IsOpen();
    //xIP1_TURBO_FAULT AT %Q* : BOOL; already updated at turbo pump logic.
    (*
    xIP1_MAIN_xAT_VAC 			:= 	MRCO_MAIN_GHC_01.IG.xAT_VAC;
    xIP1_MAIN_xPRESS_OK 		:= 	MRCO_MAIN_GHC_01.IG.xPRESS_OK;
    rIP1_MAIN_rPRESS 			:= 	MRCO_MAIN_GHC_01.IG.rPRESS;
    *)
    //how to pass to IP1_MAIN_rPRESS


    IF  (MRCO_MAIN_GHC_01.IG.xPRESS_OK AND MRCO_MSC_GHC_01.IG.xPRESS_OK) THEN
        IF (MRCO_MAIN_GHC_01.IG.i_iPRESS_R > MRCO_MSC_GHC_01.IG.i_iPRESS_R) THEN
            rIP1_MAIN_rPRESS := MRCO_MSC_GHC_01.IG.rPRESS;
            xIP1_MAIN_xPRESS_OK := MRCO_MSC_GHC_01.IG.xPRESS_OK;
            xIP1_MAIN_xAT_VAC 	:= MRCO_MSC_GHC_01.IG.xAT_VAC;
        ELSE
             rIP1_MAIN_rPRESS  := MRCO_MAIN_GHC_01.IG.rPRESS;
             xIP1_MAIN_xPRESS_OK := MRCO_MAIN_GHC_01.IG.xPRESS_OK;
            xIP1_MAIN_xAT_VAC 	:= MRCO_MAIN_GHC_01.IG.xAT_VAC;
        END_IF
    ELSE
        xIP1_MAIN_xAT_VAC := FALSE;
        xIP1_MAIN_xPRESS_OK := FALSE;
        rIP1_MAIN_rPRESS 	:= 0;
    END_IF







    xIP1_HV_SAFETY_ENABLE		:=	xHighVoltageSafteyLoopEnable;

    (*Update Thermocouple Readings*)
    PRG_TC();

    END_PROGRAM


Related:
    * `DIAGNOSTICS`_
    * `F_Turbo_NC_NO_Valve_Logic`_
    * `PRG_TC`_


PRG_COM
^^^^^^^

::

    PROGRAM PRG_COM
    VAR
    END_VAR
    (*Instanitate Serial port com function *)
    fbSerialLineControl_MRCO_MAIN_PTM_01(
        Mode:= SERIALLINEMODE_EL6_22B,
        pComIn:= ADR(stComIn_MRCO_MAIN_PTM_01),
        pComOut:=ADR(stComOut_MRCO_MAIN_PTM_01),
        SizeComIn:= UINT_TO_INT(SIZEOF(stComIn_MRCO_MAIN_PTM_01)),
        TxBuffer:= SerialTXBuffer_MRCO_MAIN_PTM_01,
        RxBuffer:= SerialRXBuffer_MRCO_MAIN_PTM_01,
        Error=> ,
        ErrorID=> );

    fbSerialLineControl_MRCO_MAIN_PTM_02(
        Mode:= SERIALLINEMODE_EL6_22B,
        pComIn:= ADR(stComIn_MRCO_MAIN_PTM_02),
        pComOut:=ADR(stComOut_MRCO_MAIN_PTM_02),
        SizeComIn:= UINT_TO_INT(SIZEOF(stComIn_MRCO_MAIN_PTM_02)),
        TxBuffer:= SerialTXBuffer_MRCO_MAIN_PTM_02,
        RxBuffer:= SerialRXBuffer_MRCO_MAIN_PTM_02,
        Error=> ,
        ErrorID=> );

    fbSerialLineControl_MRCO_MAIN_PTM_03(
        Mode:= SERIALLINEMODE_EL6_22B,
        pComIn:= ADR(stComIn_MRCO_MAIN_PTM_03),
        pComOut:=ADR(stComOut_MRCO_MAIN_PTM_03),
        SizeComIn:= UINT_TO_INT(SIZEOF(stComIn_MRCO_MAIN_PTM_03)),
        TxBuffer:= SerialTXBuffer_MRCO_MAIN_PTM_03,
        RxBuffer:= SerialRXBuffer_MRCO_MAIN_PTM_03,
        Error=> ,
        ErrorID=> );

    fbSerialLineControl_MRCO_MAIN_PTM_04(
        Mode:= SERIALLINEMODE_EL6_22B,
        pComIn:= ADR(stComIn_MRCO_MAIN_PTM_04),
        pComOut:=ADR(stComOut_MRCO_MAIN_PTM_04),
        SizeComIn:= UINT_TO_INT(SIZEOF(stComIn_MRCO_MAIN_PTM_04)),
        TxBuffer:= SerialTXBuffer_MRCO_MAIN_PTM_04,
        RxBuffer:= SerialRXBuffer_MRCO_MAIN_PTM_04,
        Error=> ,
        ErrorID=> );

    fbSerialLineControl_MRCO_ROUGH_PTM_01(
        Mode:= SERIALLINEMODE_EL6_22B,
        pComIn:= ADR(stComIn_MRCO_ROUGH_PTM_01),
        pComOut:=ADR(stComOut_MRCO_ROUGH_PTM_01),
        SizeComIn:= UINT_TO_INT(SIZEOF(stComIn_MRCO_ROUGH_PTM_01)),
        TxBuffer:= SerialTXBuffer_MRCO_ROUGH_PTM_01,
        RxBuffer:= SerialRXBuffer_MRCO_ROUGH_PTM_01,
        Error=> ,
        ErrorID=> );

    fbSerialLineControl_MRCO_MSC_PTM_01(
        Mode:= SERIALLINEMODE_EL6_22B,
        pComIn:= ADR(stComIn_MRCO_MSC_PTM_01),
        pComOut:=ADR(stComOut_MRCO_MSC_PTM_01),
        SizeComIn:= UINT_TO_INT(SIZEOF(stComIn_MRCO_MSC_PTM_01)),
        TxBuffer:= SerialTXBuffer_MRCO_MSC_PTM_01,
        RxBuffer:= SerialRXBuffer_MRCO_MSC_PTM_01,
        Error=> ,
        ErrorID=> );

    END_PROGRAM




PRG_TC
^^^^^^

::

    PROGRAM PRG_TC
    VAR
    END_VAR
    TC_01(
        fResolution:= ,
        fTemp=> ,
        bConnected=> ,
        bError=> ,
        bUnderrange=> ,
        bOverrange=> );
    TC_02(
        fResolution:= ,
        fTemp=> ,
        bConnected=> ,
        bError=> ,
        bUnderrange=> ,
        bOverrange=> );
    TC_03(
        fResolution:= ,
        fTemp=> ,
        bConnected=> ,
        bError=> ,
        bUnderrange=> ,
        bOverrange=> );
    TC_04(
        fResolution:= ,
        fTemp=> ,
        bConnected=> ,
        bError=> ,
        bUnderrange=> ,
        bOverrange=> );
    TC_05(
        fResolution:= ,
        fTemp=> ,
        bConnected=> ,
        bError=> ,
        bUnderrange=> ,
        bOverrange=> );
    TC_06(
        fResolution:= ,
        fTemp=> ,
        bConnected=> ,
        bError=> ,
        bUnderrange=> ,
        bOverrange=> );
    TC_07(
        fResolution:= ,
        fTemp=> ,
        bConnected=> ,
        bError=> ,
        bUnderrange=> ,
        bOverrange=> );
    TC_08(
        fResolution:= ,
        fTemp=> ,
        bConnected=> ,
        bError=> ,
        bUnderrange=> ,
        bOverrange=> );

    END_PROGRAM



